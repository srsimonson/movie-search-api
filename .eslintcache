[{"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/App/App.js":"1","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/SearchHook.js":"2","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/FetchHook.js":"3","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/index.js":"4","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Search/SearchForm.js":"5","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Search/SearchList.js":"6","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/MovieList.js":"7","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/Thumbs.js":"8","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/reportWebVitals.js":"9","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/MovieSearch.js":"10"},{"size":1117,"mtime":1606879856227,"results":"11","hashOfConfig":"12"},{"size":1009,"mtime":1606873913082,"results":"13","hashOfConfig":"12"},{"size":2216,"mtime":1606709846483,"results":"14","hashOfConfig":"12"},{"size":515,"mtime":1605851874321,"results":"15","hashOfConfig":"12"},{"size":1906,"mtime":1607107513178,"results":"16","hashOfConfig":"12"},{"size":866,"mtime":1607108791466,"results":"17","hashOfConfig":"12"},{"size":3384,"mtime":1606874352036,"results":"18","hashOfConfig":"12"},{"size":533,"mtime":1605853525284,"results":"19","hashOfConfig":"12"},{"size":362,"mtime":1605848815306,"results":"20","hashOfConfig":"12"},{"size":1167,"mtime":1606786751636,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"uiy6d7",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/App/App.js",["46","47","48","49","50","51"],"import React, { Component } from 'react';\n// import logo from '../../logo.svg';\nimport './App.css';\nimport FetchHook from '../Tests/FetchHook';\nimport MovieList from '../Tests/MovieList';\nimport MovieSearch from '../Tests/MovieSearch';\nimport SearchHook from '../Tests/SearchHook';\nimport Thumbs from '../Tests/Thumbs';\nimport SearchForm from '../Search/SearchForm';\nimport SearchList from '../Search/SearchList';\n\nclass App extends Component {\n  render() {\n  return (\n    <>\n    {/* <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div> */}\n    <SearchForm />\n    {/* <SearchList /> */}\n    {/* <FetchHook /> */}\n    {/* <MovieSearch /> */}\n    {/* <MovieList /> */}\n    {/* <Thumbs /> */}\n    {/* <SearchHook /> */}\n    </>\n  );}\n}\n\nexport default App;\n",["52","53"],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/SearchHook.js",[],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/FetchHook.js",[],["54","55"],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/index.js",[],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Search/SearchForm.js",[],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Search/SearchList.js",["56"],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/MovieList.js",["57","58"],"// import './Thumbs.css';\nimport React, {useState, Component} from 'react';\nimport axios from 'axios';\n\nclass MovieList extends Component {\n\n    state = {\n        displayMovie: [],\n        searchTerm: ''\n    }\n\n    // componentDidMount() {\n    //     this.getMovie();\n    // }\n\n    handleChange = (e) => {\n        this.setState({\n            searchTerm: e.target.value\n        })\n    }\n\n    searchMovie = () => {\n        console.log('searchTerm: ', this.state.searchTerm);\n        axios({\n            'method': 'GET',\n            'url': `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=${this.state.searchTerm}`\n        })\n            .then((result) => {\n            this.setState({\n                displayMovie: result.data\n            })\n            console.log('result:', result);\n            \n        })\n        .catch(error => {\n            console.log('Error with GET in MovieList.js', error);\n        })\n    }\n    getMovie = () => {\n        console.log('in get movie');\n        \n        // axios({\n        //     \"method\":\"GET\",\n        //     \"url\":\"https://movie-database-imdb-alternative.p.rapidapi.com/\",\n        //     \"headers\":{\n        //         \"content-type\":\"application/octet-stream\",\n        //         \"x-rapidapi-host\":\"movie-database-imdb-alternative.p.rapidapi.com\",\n        //         \"x-rapidapi-key\":`${process.env.REACT_APP_MOVIE_API_KEY}`,\n        //         \"useQueryString\":true\n        //     },\n        //     \"params\":{\n        //         \"page\":\"1\",\n        //         \"r\":\"json\",\n        //         \"i\":\"tt0100669\"\n        //     }\n        // })\n        // axios({\n        //     'method': 'GET',\n        //     'url': `https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&query=inception`\n        // })\n        //     .then((result) => {\n        //     this.setState({\n        //         displayMovie: result.data\n        //     })\n        //     console.log('result:', result);\n            \n        // })\n        // .catch(error => {\n        //     console.log('Error with GET in MovieList.js', error);\n        // })\n    }\n\n    render() {\n        let movies = this.state.displayMovie.results\n        // console.log('State: ', movies);\n        \n        return (\n            <div>\n                <h1>************************</h1>\n                <h1>MovieList</h1>\n                <form>\n                <input onChange={this.handleChange}></input>\n                <button onClick={this.searchMovie}>Search Movie</button>\n                </form>\n                <div>\n                    {movies && movies.map((movie) => (\n                        <ul key={movie.id}>\n                            <li>Title: {movie.original_title}</li>\n                            <li>Unique ID: {movie.id}</li>\n                            <li> Release Date: {movie.release_date}</li>\n                            <li> Vote Average: {movie.vote_average}</li>\n                            <li> Popularity: {movie.popularity}</li>\n                            <img src={'https://image.tmdb.org/t/p/w200' + movie.poster_path} />\n                            <p>{movie.overview}</p>\n                            <br/>\n                            <br/>\n                        </ul>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MovieList;","/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/Thumbs.js",[],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/reportWebVitals.js",[],"/Users/srsimonson/Documents/DEV/Projects/movie-search-api/src/components/Tests/MovieSearch.js",[],{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":17},{"ruleId":"59","severity":1,"message":"64","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":19},{"ruleId":"59","severity":1,"message":"65","line":7,"column":8,"nodeType":"61","messageId":"62","endLine":7,"endColumn":18},{"ruleId":"59","severity":1,"message":"66","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":14},{"ruleId":"59","severity":1,"message":"67","line":10,"column":8,"nodeType":"61","messageId":"62","endLine":10,"endColumn":18},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"59","severity":1,"message":"74","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":18},{"ruleId":"59","severity":1,"message":"75","line":2,"column":16,"nodeType":"61","messageId":"62","endLine":2,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":93,"column":29,"nodeType":"78","endLine":93,"endColumn":96},"no-unused-vars","'FetchHook' is defined but never used.","Identifier","unusedVar","'MovieList' is defined but never used.","'MovieSearch' is defined but never used.","'SearchHook' is defined but never used.","'Thumbs' is defined but never used.","'SearchList' is defined but never used.","no-native-reassign",["79"],"no-negated-in-lhs",["80"],["79"],["80"],"'SearchForm' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]